package com.yxb.cms.dao;

import com.yxb.cms.domain.vo.DbMenuInfo;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface DbMenuInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table db_menu_info
     *
     * @mbggenerated Thu Apr 09 18:03:43 CST 2020
     */
    int deleteByPrimaryKey(String menuInfoId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table db_menu_info
     *
     * @mbggenerated Thu Apr 09 18:03:43 CST 2020
     */
    int insert(DbMenuInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table db_menu_info
     *
     * @mbggenerated Thu Apr 09 18:03:43 CST 2020
     */
    int insertSelective(DbMenuInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table db_menu_info
     *
     * @mbggenerated Thu Apr 09 18:03:43 CST 2020
     */
    DbMenuInfo selectByPrimaryKey(String menuInfoId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table db_menu_info
     *
     * @mbggenerated Thu Apr 09 18:03:43 CST 2020
     */
    int updateByPrimaryKeySelective(DbMenuInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table db_menu_info
     *
     * @mbggenerated Thu Apr 09 18:03:43 CST 2020
     */
    int updateByPrimaryKey(DbMenuInfo record);


    /**
     * 查询菜单中记录数
     *
     * @param menuInfo
     * @return
     */
    Long selectMenuCount(DbMenuInfo menuInfo);

    /**
     * 菜单列表分页展示
     *
     * @param menuInfo
     * @return
     */
    List<DbMenuInfo> selectMenuListByPage(DbMenuInfo menuInfo);

    /**
     * 查询菜单最大排序数量
     *
     * @return
     */
    Long selectMaxOrderNo();


    /**
     * 根据Id查询父级资源总记录数
     *
     * @param menuParentId 父级资源
     * @return
     */
    Long selectCountMenuParentByMenuId(String menuParentId);




    /**
     * 根据菜单类型、和菜单级别查询菜单信息
     *
     * @param menuType   菜单类型
     * @param menuLevel  菜单级别
     * @param menuInfoId 菜单Id
     * @return
     */
    List<DbMenuInfo> selectParentMenuListByMenuTypeAndMenuLevel(@Param("menuType") Integer menuType, @Param("menuLevel") Integer menuLevel, @Param("menuInfoId") String menuInfoId);




    /**
     * 查询有效的,URL不为空的所有菜单信息
     *
     * @return
     */
    List<DbMenuInfo> selectMenuUrlAllList();

    /**
     * 查询有效的所有菜单信息
     *
     * @return
     */
    List<DbMenuInfo> selectMenuAllList();


    /**
     * 根据角色Id，查询菜单列表
     * @param roleId
     * @return
     */
    List<DbMenuInfo> selectMenuInfoByRoleId(@Param("roleId") String roleId);

}